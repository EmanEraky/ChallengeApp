// Generated by data binding compiler. Do not edit!
package com.eman.challenge.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.eman.challenge.R;
import com.eman.challenge.domain.model.BaseModelMarvel;
import com.eman.challenge.presentation.NavigationListener;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class RowCharacterBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatImageView imgMarvel;

  @NonNull
  public final CardView itemView;

  @NonNull
  public final ProgressBar progressBar;

  @Bindable
  protected NavigationListener mNListener;

  @Bindable
  protected BaseModelMarvel mMarvelOut;

  protected RowCharacterBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatImageView imgMarvel, CardView itemView, ProgressBar progressBar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.imgMarvel = imgMarvel;
    this.itemView = itemView;
    this.progressBar = progressBar;
  }

  public abstract void setNListener(@Nullable NavigationListener nListener);

  @Nullable
  public NavigationListener getNListener() {
    return mNListener;
  }

  public abstract void setMarvelOut(@Nullable BaseModelMarvel marvelOut);

  @Nullable
  public BaseModelMarvel getMarvelOut() {
    return mMarvelOut;
  }

  @NonNull
  public static RowCharacterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.row_character, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RowCharacterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RowCharacterBinding>inflateInternal(inflater, R.layout.row_character, root, attachToRoot, component);
  }

  @NonNull
  public static RowCharacterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.row_character, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RowCharacterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RowCharacterBinding>inflateInternal(inflater, R.layout.row_character, null, false, component);
  }

  public static RowCharacterBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RowCharacterBinding bind(@NonNull View view, @Nullable Object component) {
    return (RowCharacterBinding)bind(component, view, R.layout.row_character);
  }
}
